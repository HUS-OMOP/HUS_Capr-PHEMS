cid0 <- 37311061L
cid1 <- 37310282L
cid2 <- c(37310282L, 37310281L, 756055L)
cid3 <- c(710158L, 710155L, 710156L, 710159L, 45542411L, 710160L, 
45756093L, 42501115L, 586414L, 45600471L, 586415L, 710157L)
cid4 <- c(262L, 9201L)
nm0 <- "COVID-19 (including asymptomatic)"
nm1 <- "COVID-19 specific testing (pre-coordinated Measurements) - Positive"
nm2 <- "COVID-19 specific testing (pre-coordinated Measurements excluded)"
nm3 <- "COVID-19 source codes"
nm4 <- "[OHDSI Covid19 v1] Inpatient Visit"
conceptMapping0 <- list(list(includeDescendants = TRUE, isExcluded = FALSE, 
    includeMapped = FALSE))
conceptMapping1 <- list(list(includeDescendants = TRUE, isExcluded = FALSE, 
    includeMapped = FALSE))
conceptMapping2 <- list(list(includeDescendants = TRUE, isExcluded = TRUE, 
    includeMapped = FALSE), list(includeDescendants = TRUE, isExcluded = TRUE, 
    includeMapped = FALSE), list(includeDescendants = TRUE, isExcluded = FALSE, 
    includeMapped = FALSE))
conceptMapping3 <- list(list(includeDescendants = FALSE, isExcluded = FALSE, 
    includeMapped = FALSE), list(includeDescendants = FALSE, 
    isExcluded = FALSE, includeMapped = FALSE), list(includeDescendants = FALSE, 
    isExcluded = FALSE, includeMapped = FALSE), list(includeDescendants = FALSE, 
    isExcluded = FALSE, includeMapped = FALSE), list(includeDescendants = FALSE, 
    isExcluded = TRUE, includeMapped = FALSE), list(includeDescendants = FALSE, 
    isExcluded = FALSE, includeMapped = FALSE), list(includeDescendants = FALSE, 
    isExcluded = FALSE, includeMapped = FALSE), list(includeDescendants = FALSE, 
    isExcluded = FALSE, includeMapped = FALSE), list(includeDescendants = FALSE, 
    isExcluded = TRUE, includeMapped = FALSE), list(includeDescendants = FALSE, 
    isExcluded = TRUE, includeMapped = FALSE), list(includeDescendants = FALSE, 
    isExcluded = TRUE, includeMapped = FALSE), list(includeDescendants = FALSE, 
    isExcluded = TRUE, includeMapped = FALSE))
conceptMapping4 <- list(list(includeDescendants = TRUE, isExcluded = FALSE, 
    includeMapped = FALSE), list(includeDescendants = TRUE, isExcluded = FALSE, 
    includeMapped = FALSE))
conceptSet0 <- lookupConceptIds(conceptIds = cid0, mapToStandard = FALSE) %>% 
    createConceptSetExpressionCustom(Name = nm0, conceptMapping = conceptMapping0)
conceptSet1 <- lookupConceptIds(conceptIds = cid1, mapToStandard = FALSE) %>% 
    createConceptSetExpressionCustom(Name = nm1, conceptMapping = conceptMapping1)
conceptSet2 <- lookupConceptIds(conceptIds = cid2, mapToStandard = FALSE) %>% 
    createConceptSetExpressionCustom(Name = nm2, conceptMapping = conceptMapping2)
conceptSet3 <- lookupConceptIds(conceptIds = cid3, mapToStandard = FALSE) %>% 
    createConceptSetExpressionCustom(Name = nm3, conceptMapping = conceptMapping3)
conceptSet4 <- lookupConceptIds(conceptIds = cid4, mapToStandard = FALSE) %>% 
    createConceptSetExpressionCustom(Name = nm4, conceptMapping = conceptMapping4)
attPC1_1 <- createOccurrenceStartDateAttribute(Op = "gt", Value = "2019-12-01", 
    Extent = NULL)
attrListPC1 <- list(attPC1_1)
queryPC1 <- createVisitOccurrence(conceptSetExpression = conceptSet4, 
    attributeList = attrListPC1)
PrimaryCriteria <- createPrimaryCriteria(Name = "cohortPrimaryCriteria", 
    ComponentList = list(queryPC1), ObservationWindow = createObservationWindow(PriorDays = 0L, 
        PostDays = 0L), Limit = "All")
queryAC_1 <- createConditionOccurrence(conceptSetExpression = conceptSet0, 
    attributeList = NULL)
timelineAC_1 <- createTimeline(StartWindow = createWindow(StartDays = 21L, 
    StartCoeff = "Before", EndDays = "All", EndCoeff = "After", 
    EventStarts = TRUE, IndexStart = TRUE), EndWindow = createWindow(StartDays = "All", 
    StartCoeff = "Before", EndDays = 0L, EndCoeff = "After", 
    EventStarts = TRUE, IndexStart = FALSE), RestrictVisit = FALSE, 
    IgnoreObservationPeriod = FALSE)
countAC_1 <- createCount(Query = queryAC_1, Logic = "at_least", 
    Count = 1L, isDistinct = FALSE, Timeline = timelineAC_1)
attAC_2_1 <- createConditionSourceConceptAttribute(ConceptSetExpression = conceptSet3)
attrListAC_2 <- list(attAC_2_1)
queryAC_2 <- createConditionOccurrence(conceptSetExpression = NULL, 
    attributeList = attrListAC_2)
timelineAC_2 <- createTimeline(StartWindow = createWindow(StartDays = 21L, 
    StartCoeff = "Before", EndDays = "All", EndCoeff = "After", 
    EventStarts = TRUE, IndexStart = TRUE), EndWindow = createWindow(StartDays = "All", 
    StartCoeff = "Before", EndDays = 0L, EndCoeff = "After", 
    EventStarts = TRUE, IndexStart = FALSE), RestrictVisit = FALSE, 
    IgnoreObservationPeriod = FALSE)
countAC_2 <- createCount(Query = queryAC_2, Logic = "at_least", 
    Count = 1L, isDistinct = FALSE, Timeline = timelineAC_2)
queryAC_3 <- createMeasurement(conceptSetExpression = conceptSet1, 
    attributeList = NULL)
timelineAC_3 <- createTimeline(StartWindow = createWindow(StartDays = 21L, 
    StartCoeff = "Before", EndDays = "All", EndCoeff = "After", 
    EventStarts = TRUE, IndexStart = TRUE), EndWindow = createWindow(StartDays = "All", 
    StartCoeff = "Before", EndDays = 0L, EndCoeff = "After", 
    EventStarts = TRUE, IndexStart = FALSE), RestrictVisit = FALSE, 
    IgnoreObservationPeriod = FALSE)
countAC_3 <- createCount(Query = queryAC_3, Logic = "at_least", 
    Count = 1L, isDistinct = FALSE, Timeline = timelineAC_3)
attAC_4_1 <- createValueAsConceptAttribute(conceptIds = c(4126681L, 
45877985L, 9191L, 4181412L, 45879438L, 45884084L), mapToStandard = FALSE)
attrListAC_4 <- list(attAC_4_1)
queryAC_4 <- createMeasurement(conceptSetExpression = conceptSet2, 
    attributeList = attrListAC_4)
timelineAC_4 <- createTimeline(StartWindow = createWindow(StartDays = 21L, 
    StartCoeff = "Before", EndDays = "All", EndCoeff = "After", 
    EventStarts = TRUE, IndexStart = TRUE), EndWindow = createWindow(StartDays = "All", 
    StartCoeff = "Before", EndDays = 0L, EndCoeff = "After", 
    EventStarts = TRUE, IndexStart = FALSE), RestrictVisit = FALSE, 
    IgnoreObservationPeriod = FALSE)
countAC_4 <- createCount(Query = queryAC_4, Logic = "at_least", 
    Count = 1L, isDistinct = FALSE, Timeline = timelineAC_4)
attAC_5_1 <- createValueAsConceptAttribute(conceptIds = c(4126681L, 
45877985L, 9191L, 45884084L, 4181412L, 45879438L), mapToStandard = FALSE)
attrListAC_5 <- list(attAC_5_1)
queryAC_5 <- createObservation(conceptSetExpression = conceptSet2, 
    attributeList = attrListAC_5)
timelineAC_5 <- createTimeline(StartWindow = createWindow(StartDays = 21L, 
    StartCoeff = "Before", EndDays = "All", EndCoeff = "After", 
    EventStarts = TRUE, IndexStart = TRUE), EndWindow = createWindow(StartDays = "All", 
    StartCoeff = "Before", EndDays = 0L, EndCoeff = "After", 
    EventStarts = TRUE, IndexStart = FALSE), RestrictVisit = FALSE, 
    IgnoreObservationPeriod = FALSE)
countAC_5 <- createCount(Query = queryAC_5, Logic = "at_least", 
    Count = 1L, isDistinct = FALSE, Timeline = timelineAC_5)
attAC_6_1 <- createObservationSourceConceptAttribute(ConceptSetExpression = conceptSet3)
attrListAC_6 <- list(attAC_6_1)
queryAC_6 <- createObservation(conceptSetExpression = NULL, attributeList = attrListAC_6)
timelineAC_6 <- createTimeline(StartWindow = createWindow(StartDays = 21L, 
    StartCoeff = "Before", EndDays = "All", EndCoeff = "After", 
    EventStarts = TRUE, IndexStart = TRUE), EndWindow = createWindow(StartDays = "All", 
    StartCoeff = "Before", EndDays = 0L, EndCoeff = "After", 
    EventStarts = TRUE, IndexStart = FALSE), RestrictVisit = FALSE, 
    IgnoreObservationPeriod = FALSE)
countAC_6 <- createCount(Query = queryAC_6, Logic = "at_least", 
    Count = 1L, isDistinct = FALSE, Timeline = timelineAC_6)
AC <- createGroup(Name = "AC", type = "ANY", count = NULL, criteriaList = list(countAC_1, 
    countAC_2, countAC_3, countAC_4, countAC_5, countAC_6), demographicCriteriaList = NULL, 
    Groups = NULL)
AdditionalCriteria <- createAdditionalCriteria(Name = "cohortAdditionalCriteria", 
    Contents = AC, Limit = "All")
attDemCrit_InclusionRule1_1_1 <- createAgeAttribute(Op = "gte", 
    Value = 18L, Extent = NULL)
InclusionRule1 <- createGroup(Name = "age >=18", type = "ALL", 
    count = NULL, criteriaList = NULL, demographicCriteriaList = list(attDemCrit_InclusionRule1_1_1), 
    Groups = NULL)
queryInclusionRule2_1 <- createObservationPeriod(conceptSetExpression = NULL, 
    attributeList = NULL)
timelineInclusionRule2_1 <- createTimeline(StartWindow = createWindow(StartDays = "All", 
    StartCoeff = "Before", EndDays = 365L, EndCoeff = "Before", 
    EventStarts = TRUE, IndexStart = TRUE), EndWindow = createWindow(StartDays = 0L, 
    StartCoeff = "Before", EndDays = "All", EndCoeff = "After", 
    EventStarts = FALSE, IndexStart = FALSE), RestrictVisit = FALSE, 
    IgnoreObservationPeriod = FALSE)
countInclusionRule2_1 <- createCount(Query = queryInclusionRule2_1, 
    Logic = "at_least", Count = 1L, isDistinct = FALSE, Timeline = timelineInclusionRule2_1)
InclusionRule2 <- createGroup(Name = "has >=365d of prior observation", 
    type = "ALL", count = NULL, criteriaList = list(countInclusionRule2_1), 
    demographicCriteriaList = NULL, Groups = NULL)
queryCorrelatedCriteria_1 <- createConditionOccurrence(conceptSetExpression = conceptSet0, 
    attributeList = NULL)
timelineCorrelatedCriteria_1 <- createTimeline(StartWindow = createWindow(StartDays = 21L, 
    StartCoeff = "Before", EndDays = "All", EndCoeff = "After", 
    EventStarts = TRUE, IndexStart = TRUE), EndWindow = createWindow(StartDays = "All", 
    StartCoeff = "Before", EndDays = 0L, EndCoeff = "After", 
    EventStarts = TRUE, IndexStart = FALSE), RestrictVisit = FALSE, 
    IgnoreObservationPeriod = FALSE)
countCorrelatedCriteria_1 <- createCount(Query = queryCorrelatedCriteria_1, 
    Logic = "at_least", Count = 1L, isDistinct = FALSE, Timeline = timelineCorrelatedCriteria_1)
attCorrelatedCriteria_2_1 <- createConditionSourceConceptAttribute(ConceptSetExpression = conceptSet3)
attrListCorrelatedCriteria_2 <- list(attCorrelatedCriteria_2_1)
queryCorrelatedCriteria_2 <- createConditionOccurrence(conceptSetExpression = NULL, 
    attributeList = attrListCorrelatedCriteria_2)
timelineCorrelatedCriteria_2 <- createTimeline(StartWindow = createWindow(StartDays = 21L, 
    StartCoeff = "Before", EndDays = "All", EndCoeff = "After", 
    EventStarts = TRUE, IndexStart = TRUE), EndWindow = createWindow(StartDays = "All", 
    StartCoeff = "Before", EndDays = 0L, EndCoeff = "After", 
    EventStarts = TRUE, IndexStart = FALSE), RestrictVisit = FALSE, 
    IgnoreObservationPeriod = FALSE)
countCorrelatedCriteria_2 <- createCount(Query = queryCorrelatedCriteria_2, 
    Logic = "at_least", Count = 1L, isDistinct = FALSE, Timeline = timelineCorrelatedCriteria_2)
attCorrelatedCriteria_3_1 <- createObservationSourceConceptAttribute(ConceptSetExpression = conceptSet3)
attrListCorrelatedCriteria_3 <- list(attCorrelatedCriteria_3_1)
queryCorrelatedCriteria_3 <- createObservation(conceptSetExpression = NULL, 
    attributeList = attrListCorrelatedCriteria_3)
timelineCorrelatedCriteria_3 <- createTimeline(StartWindow = createWindow(StartDays = 21L, 
    StartCoeff = "Before", EndDays = "All", EndCoeff = "After", 
    EventStarts = TRUE, IndexStart = TRUE), EndWindow = createWindow(StartDays = "All", 
    StartCoeff = "Before", EndDays = 0L, EndCoeff = "After", 
    EventStarts = TRUE, IndexStart = FALSE), RestrictVisit = FALSE, 
    IgnoreObservationPeriod = FALSE)
countCorrelatedCriteria_3 <- createCount(Query = queryCorrelatedCriteria_3, 
    Logic = "at_least", Count = 1L, isDistinct = FALSE, Timeline = timelineCorrelatedCriteria_3)
queryCorrelatedCriteria_4 <- createMeasurement(conceptSetExpression = conceptSet1, 
    attributeList = NULL)
timelineCorrelatedCriteria_4 <- createTimeline(StartWindow = createWindow(StartDays = 21L, 
    StartCoeff = "Before", EndDays = "All", EndCoeff = "After", 
    EventStarts = TRUE, IndexStart = TRUE), EndWindow = createWindow(StartDays = "All", 
    StartCoeff = "Before", EndDays = 0L, EndCoeff = "After", 
    EventStarts = TRUE, IndexStart = FALSE), RestrictVisit = FALSE, 
    IgnoreObservationPeriod = FALSE)
countCorrelatedCriteria_4 <- createCount(Query = queryCorrelatedCriteria_4, 
    Logic = "at_least", Count = 1L, isDistinct = FALSE, Timeline = timelineCorrelatedCriteria_4)
attCorrelatedCriteria_5_1 <- createValueAsConceptAttribute(conceptIds = c(4126681L, 
45877985L, 9191L, 45884084L, 4181412L, 45879438L), mapToStandard = FALSE)
attrListCorrelatedCriteria_5 <- list(attCorrelatedCriteria_5_1)
queryCorrelatedCriteria_5 <- createMeasurement(conceptSetExpression = conceptSet2, 
    attributeList = attrListCorrelatedCriteria_5)
timelineCorrelatedCriteria_5 <- createTimeline(StartWindow = createWindow(StartDays = 21L, 
    StartCoeff = "Before", EndDays = "All", EndCoeff = "After", 
    EventStarts = TRUE, IndexStart = TRUE), EndWindow = createWindow(StartDays = "All", 
    StartCoeff = "Before", EndDays = 0L, EndCoeff = "After", 
    EventStarts = TRUE, IndexStart = FALSE), RestrictVisit = FALSE, 
    IgnoreObservationPeriod = FALSE)
countCorrelatedCriteria_5 <- createCount(Query = queryCorrelatedCriteria_5, 
    Logic = "at_least", Count = 1L, isDistinct = FALSE, Timeline = timelineCorrelatedCriteria_5)
attCorrelatedCriteria_6_1 <- createValueAsConceptAttribute(conceptIds = c(4126681L, 
45877985L, 9191L, 45884084L, 4181412L, 45879438L), mapToStandard = FALSE)
attrListCorrelatedCriteria_6 <- list(attCorrelatedCriteria_6_1)
queryCorrelatedCriteria_6 <- createObservation(conceptSetExpression = conceptSet2, 
    attributeList = attrListCorrelatedCriteria_6)
timelineCorrelatedCriteria_6 <- createTimeline(StartWindow = createWindow(StartDays = 21L, 
    StartCoeff = "Before", EndDays = "All", EndCoeff = "After", 
    EventStarts = TRUE, IndexStart = TRUE), EndWindow = createWindow(StartDays = "All", 
    StartCoeff = "Before", EndDays = 0L, EndCoeff = "After", 
    EventStarts = TRUE, IndexStart = FALSE), RestrictVisit = FALSE, 
    IgnoreObservationPeriod = FALSE)
countCorrelatedCriteria_6 <- createCount(Query = queryCorrelatedCriteria_6, 
    Logic = "at_least", Count = 1L, isDistinct = FALSE, Timeline = timelineCorrelatedCriteria_6)
CorrelatedCriteria <- createGroup(Name = "CorrelatedCriteria", 
    type = "ANY", count = NULL, criteriaList = list(countCorrelatedCriteria_1, 
        countCorrelatedCriteria_2, countCorrelatedCriteria_3, 
        countCorrelatedCriteria_4, countCorrelatedCriteria_5, 
        countCorrelatedCriteria_6), demographicCriteriaList = NULL, 
    Groups = NULL)
attInclusionRule3_1_1 <- createCorrelatedCriteriaAttribute(Group = CorrelatedCriteria)
attrListInclusionRule3_1 <- list(attInclusionRule3_1_1)
queryInclusionRule3_1 <- createVisitOccurrence(conceptSetExpression = conceptSet4, 
    attributeList = attrListInclusionRule3_1)
timelineInclusionRule3_1 <- createTimeline(StartWindow = createWindow(StartDays = 180L, 
    StartCoeff = "Before", EndDays = 1L, EndCoeff = "Before", 
    EventStarts = TRUE, IndexStart = TRUE), EndWindow = NULL, 
    RestrictVisit = FALSE, IgnoreObservationPeriod = FALSE)
countInclusionRule3_1 <- createCount(Query = queryInclusionRule3_1, 
    Logic = "exactly", Count = 0L, isDistinct = FALSE, Timeline = timelineInclusionRule3_1)
InclusionRule3 <- createGroup(Name = "does not have hospitalization for COVID19 in the 6 months preceding admission", 
    type = "ALL", count = NULL, criteriaList = list(countInclusionRule3_1), 
    demographicCriteriaList = NULL, Groups = NULL)
InclusionRules <- createInclusionRules(Name = "cohortInclusionRules", 
    Contents = list(InclusionRule1, InclusionRule2, InclusionRule3), 
    Limit = "First")
EndStrategy <- createDateOffsetEndStrategy(offset = 0L, eventDateOffset = "EndDate")
CohortEra <- createCohortEra(EraPadDays = 0L, LeftCensorDate = NULL, 
    RightCensorDate = NULL)
CohortDefinition <- createCohortDefinition(Name = "CohortDefinition", 
    cdmVersionRange = ">=5.0.0", PrimaryCriteria = PrimaryCriteria, 
    AdditionalCriteria = AdditionalCriteria, InclusionRules = InclusionRules, 
    EndStrategy = EndStrategy, CensoringCriteria = NULL, CohortEra = CohortEra)
