% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/UserConceptLookupFn.R
\name{lookupKeyword}
\alias{lookupKeyword}
\title{Lookup concept name as a general search}
\usage{
lookupKeyword(
  keyword,
  searchType = c("like", "exact", "any"),
  connectionDetails = NULL,
  connection = NULL,
  vocabularyDatabaseSchema = NULL,
  oracleTempSchema = NULL,
  simplifyToDataframe = FALSE
)
}
\arguments{
\item{keyword}{a character string used to search OMOP concepts}

\item{searchType}{options to aid search. Can use like match, exact match or any match}

\item{connectionDetails}{An object of type \code{connectionDetails} as created using the
\code{\link[DatabaseConnector]{createConnectionDetails}} function in the
DatabaseConnector package. Can be left NULL if \code{connection} is
provided.}

\item{connection}{An object of type \code{connection} as created using the
\code{\link[DatabaseConnector]{connect}} function in the
DatabaseConnector package. Can be left NULL if \code{connectionDetails}
is provided, in which case a new connection will be opened at the start
of the function, and closed when the function finishes.}

\item{vocabularyDatabaseSchema}{Schema name where your OMOP vocabulary format resides.
Note that for SQL Server, this should include both the database and
schema name, for example 'vocabulary.dbo'.}

\item{oracleTempSchema}{Should be used in Oracle to specify a schema where the user has write
privileges for storing temporary tables.}

\item{simplifyToDataframe}{logic to return dataframe or tibble. If are piping this function
to create a concept set expression keep as true. Coercion to concept set expressions
requires the use of a dataframe. If false returns a tiblle where $. retrieves the
dataframe. For keyword lookup it is suggested to keep option false.}
}
\value{
a tibble data frame object with conceptId, conceptName, standardConcept,
              standardConceptCaption, invalidReason, invalidReasonCaption, conceptCode,
              domainId, vocabularyId, conceptClassId.
}
\description{
This function looks up concepts based on the concept name. It can be modified to conduct
an exact name search or general search that contains the concept name in the concept.
}
